function degToRad(a){return a*Math.PI/180}mat4.multiplyVec3=function(c,b,a){var i=a[0],h=a[1],g=a[2];c[0]=b[0]*i+b[4]*h+b[8]*g+b[12];c[1]=b[1]*i+b[5]*h+b[9]*g+b[13];c[2]=b[2]*i+b[6]*h+b[10]*g+b[14];return c};mat4.toMat3=function(c,b){var c=new glMatrix.ARRAY_TYPE(9);c[0]=b[0];c[1]=b[1];c[2]=b[2];c[3]=b[4];c[4]=b[5];c[5]=b[6];c[6]=b[8];c[7]=b[9];c[8]=b[10];return c};function GetDatasetById(c){for(var b=0;b<MenuData.length;b++){if(MenuData[b].hasOwnProperty("Dataset_ID")){var a=MenuData[b];if(a.Dataset_ID==c){return a}}}}function GetDatasetByStore(c){for(var b=0;b<MenuData.length;b++){if(MenuData[b].hasOwnProperty("FullName")){var a=MenuData[b];if(a.DatabaseStore==c){return a}}}}function generateList(h){var e,g,f={},d={};function c(){return document.createElement("ul")}function b(i){var j=document.createElement("li");if(!i.hasOwnProperty("DatabaseStore")){j.appendChild(document.createTextNode(i.name))}else{j.appendChild(document.createElement("div"));j.childNodes[0].setAttribute("DatabaseStore",i.DatabaseStore);j.childNodes[0].appendChild(document.createTextNode(i.name))}return j}f[0]=c();f[0].setAttribute("id","datasetMenu");d[0]=1;for(e=0;e<h.length;++e){var a=f[h[e].parentId].appendChild(b(h[e]));f[h[e].id]=c();a.appendChild(f[h[e].id]);d[h[e].id]=0;d[h[e].parentId]+=1}for(e in d){if(d[e]===0){f[e].parentNode.removeChild(f[e])}}return f[0]}function padLeft(a,c,b){return Array(c-String(a).length+1).join(b||"0")+a}Number.prototype.padLeft=function(b,a){return Array(b-String(this).length+1).join(a||"0")+this};function CelsiusToFahrenheit(a){return a*(9/5)+32}function FahrenheitToCelsius(a){return(a-32)*(5/9)}function KelvinToCelsius(a){return(a-273.15)}function ProcessRawDataValue(a){valueFinal=[];switch(LayerSettings.DataUnits){case"Kelvins":case"degK":switch(LayerSettings.TemperatureType){case"C":for(var b=0;b<a.length;b++){valueFinal.push(KelvinToCelsius(a[b]))}break;default:valueFinal=a}break;default:valueFinal=a}return(valueFinal)}function cartesianToSphere(q,n,g){var h=q;var c=n;var p=Math.sin(h);var m=Math.cos(h);var o=Math.sin(c);var d=Math.cos(c);var l=d*m;var k=d*p;var j=o;var f=mat4.create();var r=vec3.create();var i=vec3.create();r[0]=l;r[1]=k;r[2]=j;mat4.rotate(f,f,degToRad(90),[0,0,1]);mat4.multiplyVec3(i,f,r);var a=vec3.create();var e=mat4.create();mat4.rotate(e,e,degToRad(-90),r);mat4.multiplyVec3(a,e,i);var b={coordinates:{x:g*l,y:g*k,z:g*j},normals:{x:l,y:k,z:j},tangents:{x:i[0],y:i[1],z:i[2]},biTangents:{x:a[0],y:a[1],z:a[2]}};return b}function Unproject(e,d,c,i,f,k,l){var b=vec4.create();b[0]=(2*e)/i-1;b[1]=-1*((2*d)/f-1);b[2]=2*c-1;b[3]=1;var j=mat4.create();mat4.copy(j,k);mat4.invert(j,j);var a=vec4.create();mat4.multiply(a,j,b);a[0]=a[0]/a[3];a[1]=a[1]/a[3];a[2]=a[2]/a[3];a[3]=1;var h=mat4.create();mat4.copy(h,l);mat4.invert(h,h);var g=vec4.create();mat4.multiply(g,h,a);return g}function TriangleIntersection(h,g,e,f,d){var k=1e-8;returnValue={intersects:false,point:null};var q=vec3.create(),o=vec3.create(),E=vec3.create();var B=vec3.create(),p=vec3.create(),m=vec3.create();var A,J,H;var l=vec3.create();vec3.sub(q,g,h);vec3.sub(o,e,h);vec3.cross(E,q,o);if(E[0]==0&&E[1]==0&&E[2]==0){return returnValue}vec3.sub(B,d,f);vec3.sub(p,f,h);J=-1*vec3.dot(E,p);H=vec3.dot(E,B);if(Math.abs(H)<k){if(J==0){return returnValue}else{return returnValue}}A=J/H;if(A<0){return returnValue}rvec=vec3.create();rvec[0]=A;rvec[1]=A;rvec[2]=A;var G=vec3.create();vec3.multiply(G,rvec,B);vec3.add(l,f,G);var j,i,C,c,K,z;j=vec3.dot(q,q);i=vec3.dot(q,o);C=vec3.dot(o,o);m=vec3.sub(m,l,h);c=vec3.dot(m,q);K=vec3.dot(m,o);z=i*i-j*C;var y,x;y=(i*K-C*c)/z;if(y<0||y>1){return returnValue}x=(i*c-j*K)/z;if(x<0||(y+x)>1){return returnValue}returnValue.intersects=true;var F=vec3.create();F=l;returnValue.point=F;return returnValue}Array.prototype.max=function(){return Math.max.apply(null,this)};Array.prototype.min=function(){return Math.min.apply(null,this)};Array.prototype.contains=function(a){for(var b=0;b<this.length;b++){if(this[b]===a){return true}}return false};Array.prototype.unique=function(){var a=[];for(var b=0;b<this.length;b++){if(!a.contains(this[b])){a.push(this[b])}}return a};String.prototype.replaceAll=function(a,b){var c=this;return c.split(a).join(b)};